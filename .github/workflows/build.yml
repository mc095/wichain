name: Build WiChain for All Platforms

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: windows-latest
            rust_target: x86_64-pc-windows-msvc
            artifact_name: wichain-windows
            artifact_ext: .msi
          - os: ubuntu-22.04
            rust_target: x86_64-unknown-linux-gnu
            artifact_name: wichain-linux
            artifact_ext: .deb
          - os: macos-latest
            rust_target: x86_64-apple-darwin
            artifact_name: wichain-macos
            artifact_ext: .dmg

    runs-on: ${{ matrix.platform.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: wichain-backend/frontend/package-lock.json

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.rust_target }}

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: wichain-backend/src-tauri

      - name: Install Linux dependencies
        if: matrix.platform.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.0-dev \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            build-essential \
            curl \
            wget \
            file

      - name: Install frontend dependencies
        working-directory: wichain-backend/frontend
        run: npm install

      - name: Build frontend
        working-directory: wichain-backend/frontend
        run: npm run build

      - name: Install Tauri CLI
        run: cargo install tauri-cli

      - name: Build Tauri app
        working-directory: wichain-backend/src-tauri
        run: cargo tauri build

      - name: Upload artifacts (Windows)
        if: matrix.platform.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.artifact_name }}
          path: wichain-backend/src-tauri/target/release/bundle/msi/*.msi

      - name: Upload artifacts (Linux)
        if: matrix.platform.os == 'ubuntu-22.04'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.artifact_name }}
          path: |
            wichain-backend/src-tauri/target/release/bundle/deb/*.deb
            wichain-backend/src-tauri/target/release/bundle/appimage/*.AppImage

      - name: Upload artifacts (macOS)
        if: matrix.platform.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.artifact_name }}
          path: wichain-backend/src-tauri/target/release/bundle/dmg/*.dmg

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/wichain-windows/**/*.msi
            artifacts/wichain-linux/**/*.deb
            artifacts/wichain-linux/**/*.AppImage
            artifacts/wichain-macos/**/*.dmg
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
